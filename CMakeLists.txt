project(pdns-routemgr CXX)
cmake_minimum_required(VERSION 3.1)

message(STATUS "Building for ${CMAKE_SYSTEM_NAME}. Processor architecture is ${CMAKE_SYSTEM_PROCESSOR}")
message(STATUS "C compiler is ${CMAKE_C_COMPILER}")
message(STATUS "CXX compiler is ${CMAKE_CXX_COMPILER}")

#set some custom options and default values
set(ARCHSUFFIX ".${CMAKE_SYSTEM_PROCESSOR}")

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release")
endif(NOT CMAKE_BUILD_TYPE)

#print status
message(STATUS "Current build configuration:")
message(STATUS "CMAKE_GENERATOR=${CMAKE_GENERATOR}")
message(STATUS "CMAKE_SOURCE_DIR=${CMAKE_SOURCE_DIR}")
message(STATUS "CMAKE_BINARY_DIR=${CMAKE_BINARY_DIR}")
message(STATUS "CMAKE_CURRENT_BINARY_DIR=${CMAKE_CURRENT_BINARY_DIR}")

include_directories("${CMAKE_BINARY_DIR}")

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

#set warnings for gcc
if(CMAKE_COMPILER_IS_GNUCXX)
	message(STATUS "Applying extra flags for GCC compiler")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic -Wall -Wextra -Wshadow \
		-Wstrict-overflow=5 -Wwrite-strings -Woverlength-strings -Winit-self -Wmissing-include-dirs \
		-Wcast-qual -Wcast-align -Wconversion -Wlogical-op -Wold-style-cast\
		-Wpacked -Wredundant-decls -Wno-inline -Wdisabled-optimization -Wfloat-equal -Wswitch-default")
endif()

#check include files
include(CheckIncludeFile)
include(CheckSymbolExists)

#check for pthread support
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

#protobuf
find_package(Protobuf REQUIRED)
include_directories(${Protobuf_INCLUDE_DIRS})
protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${PROJECT_SOURCE_DIR}/Src/dnsmessage.proto ${PROJECT_SOURCE_DIR}/Src/RouteInfo.proto)

#unset some warnings for gcc for autogenerated protobuf code
if(CMAKE_COMPILER_IS_GNUCXX)
	set_source_files_properties(${PROTO_SRCS} PROPERTIES COMPILE_FLAGS "-Wno-conversion -Wno-unused-parameter -Wno-array-bounds -Wno-strict-overflow")
endif()

#qt creator trick
if(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES)
  include_directories("${CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES}")
endif(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES)

file(GLOB SOURCE_FILES ${PROJECT_SOURCE_DIR}/Src/*.cpp)

#unset some warnings for GCC issued from external headers
if(CMAKE_COMPILER_IS_GNUCXX)
	set_source_files_properties("${PROJECT_SOURCE_DIR}/Src/NetDevTracker.cpp" PROPERTIES COMPILE_FLAGS "-Wno-old-style-cast")
endif()

add_executable(pdns-routemgr ${SOURCE_FILES} ${PROTO_SRCS} ${PROTO_HDRS})
target_link_libraries(pdns-routemgr PRIVATE atomic Threads::Threads ${Protobuf_LIBRARIES})
install(TARGETS pdns-routemgr DESTINATION sbin)
